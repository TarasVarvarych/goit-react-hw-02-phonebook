{"version":3,"file":"static/js/544.b58ee143.chunk.js","mappings":"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","sources":["components/PhoneBook/ContactForm/ContactForm.styled.js","components/PhoneBook/ContactForm/ContactForm.jsx","components/PhoneBook/Contacts/Contacts.styled.js","components/PhoneBook/Contacts/Contacts.jsx","components/PhoneBook/Filter/Filter.styled.js","components/PhoneBook/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const ContactFormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled.input`\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  background-color: #7da2a9;\n  border-radius: 5px;\n  border: transparent;\n  outline: none;\n  padding: 10px;\n  font-size: 20px;\n`;\n\nexport const AddContactBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  background-color: black;\n  color: white;\n  font-weight: 700;\n  margin-top: 15px;\n  &:hover {\n    background-color: white;\n    color: black;\n    scale: 1.05;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  ContactFormEl,\n  FormLabel,\n  FormInput,\n  AddContactBtn,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/selectors';\nimport { addContact } from 'redux/contactsAPI';\n\nexport function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setContactName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      window.alert(`${contactName} is already in your contacts`);\n      return;\n    }\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n      })\n    );\n\n    setContactName('');\n    setNumber('');\n    e.target.reset();\n  };\n\n  const handleInputChange = e => {\n    const { name } = e.target;\n    switch (name) {\n      case 'name':\n        setContactName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <ContactFormEl onSubmit={handleSubmit}>\n      <FormLabel htmlFor=\"\">\n        Name\n        <FormInput\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        {' '}\n        Phone\n        <FormInput\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <AddContactBtn type=\"submit\">Add contact</AddContactBtn>\n    </ContactFormEl>\n  );\n}\n","import styled from 'styled-components';\nexport const ContactList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const DeleteButton = styled.button`\n  cursor: pointer;\n  border: none;\n  border-radius: 5px;\n  padding: 5px 10px;\n  background-color: black;\n  color: white;\n  font-weight: 700;\n  margin-left: 15px;\n  &:hover {\n    background-color: red;\n    scale: 1.05;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ContactName = styled.span`\n  font-size: 24px;\n  font-weight: 500;\n`;\n","import { useEffect } from 'react';\nimport {\n  ContactList,\n  DeleteButton,\n  ContactItem,\n  ContactName,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/contactsAPI';\nexport function Contacts() {\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContacts);\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactList>\n      {filteredContacts.map(({ name, number, id }) => (\n        <ContactItem key={id}>\n          <ContactName>{name}</ContactName> : {number}\n          <DeleteButton\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </DeleteButton>\n        </ContactItem>\n      ))}\n    </ContactList>\n  );\n}\n","import styled from 'styled-components';\nexport const FilterInput = styled.input`\n  width: 400px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n  background-color: #7da2a9;\n  border-radius: 5px;\n  border: transparent;\n  outline: none;\n  padding: 10px;\n  font-size: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  font-size: 24px;\n  font-weight: 500;\n`;\n","import { FilterInput, FilterLabel } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/selectors';\nimport { setFilter } from 'redux/filterSlice/filterSlice';\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onFilterChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n  return (\n    <FilterLabel>\n      Find by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={onFilterChange}\n        value={filter}\n      />\n    </FilterLabel>\n  );\n}\n","import { ContactsTitle, HeroTitle } from 'components/App/App.styled';\nimport { ContactForm } from 'components/PhoneBook/ContactForm/ContactForm';\nimport { Contacts } from 'components/PhoneBook/Contacts/Contacts';\nimport { Filter } from 'components/PhoneBook/Filter/Filter';\n\nfunction ContactsPage() {\n  return (\n    <>\n      <HeroTitle>PhoneBook</HeroTitle>\n      <ContactForm />\n      <Filter />\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Contacts />\n    </>\n  );\n}\n\nexport default ContactsPage;\n"],"names":["ContactFormEl","styled","FormLabel","FormInput","AddContactBtn","ContactForm","contacts","useSelector","getContacts","dispatch","useDispatch","useState","contactName","setContactName","number","setNumber","handleInputChange","e","target","name","value","onSubmit","preventDefault","some","window","alert","addContact","reset","htmlFor","onChange","type","pattern","title","required","ContactList","DeleteButton","ContactItem","ContactName","Contacts","filter","getFilter","normalizedFilter","toLowerCase","filteredContacts","includes","useEffect","fetchContacts","map","id","onClick","deleteContact","FilterInput","FilterLabel","Filter","setFilter","currentTarget"],"sourceRoot":""}